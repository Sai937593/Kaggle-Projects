{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.15","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"tpu1vmV38","dataSources":[{"sourceId":84894,"databundleVersionId":9709193,"sourceType":"competition"},{"sourceId":9706567,"sourceType":"datasetVersion","datasetId":5936521},{"sourceId":9722405,"sourceType":"datasetVersion","datasetId":5948628}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[],"gpuType":"V28","include_colab_link":true},"accelerator":"TPU","widgets":{"application/vnd.jupyter.widget-state+json":{"c720aeb19f0340f2814f90060ca725a0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0251a40a64084074b0dcd481dc987ec1","IPY_MODEL_27eda0234c0c41cca597039d6ba013f0","IPY_MODEL_e485ad01203f4892bfca150001841277"],"layout":"IPY_MODEL_c7d47a9e7dcc470c90258b0e4bdc861b"}},"0251a40a64084074b0dcd481dc987ec1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_80bbcfd89fe5479293a041f412f627de","placeholder":"​","style":"IPY_MODEL_48659b8a38044461a7667c33dcc2533c","value":" 90%"}},"27eda0234c0c41cca597039d6ba013f0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_a9ff7cbc02fb4ccbb974a31262ae5ecc","max":10,"min":0,"orientation":"horizontal","style":"IPY_MODEL_54d688765c00479e98216630d7855cf2","value":9}},"e485ad01203f4892bfca150001841277":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d7d39aa9302a432b981e35f8a686eb2e","placeholder":"​","style":"IPY_MODEL_a783d51d1bbd489f8abbb4de55f15835","value":" 9/10 [1:12:52&lt;07:08, 428.51s/it]"}},"c7d47a9e7dcc470c90258b0e4bdc861b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"80bbcfd89fe5479293a041f412f627de":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"48659b8a38044461a7667c33dcc2533c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a9ff7cbc02fb4ccbb974a31262ae5ecc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"54d688765c00479e98216630d7855cf2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d7d39aa9302a432b981e35f8a686eb2e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a783d51d1bbd489f8abbb4de55f15835":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install --upgrade pip\n!pip install ipywidgets jupyter","metadata":{"execution":{"iopub.status.busy":"2024-10-25T19:18:34.963648Z","iopub.execute_input":"2024-10-25T19:18:34.963959Z","iopub.status.idle":"2024-10-25T19:18:38.944037Z","shell.execute_reply.started":"2024-10-25T19:18:34.963932Z","shell.execute_reply":"2024-10-25T19:18:38.942893Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Requirement already satisfied: pip in /usr/local/lib/python3.10/site-packages (24.2)\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.\u001b[0m\u001b[33m\n\u001b[0mRequirement already satisfied: ipywidgets in /usr/local/lib/python3.10/site-packages (8.1.5)\nRequirement already satisfied: jupyter in /usr/local/lib/python3.10/site-packages (1.1.1)\nRequirement already satisfied: comm>=0.1.3 in /usr/local/lib/python3.10/site-packages (from ipywidgets) (0.2.2)\nRequirement already satisfied: ipython>=6.1.0 in /usr/local/lib/python3.10/site-packages (from ipywidgets) (8.27.0)\nRequirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.10/site-packages (from ipywidgets) (5.14.3)\nRequirement already satisfied: widgetsnbextension~=4.0.12 in /usr/local/lib/python3.10/site-packages (from ipywidgets) (4.0.13)\nRequirement already satisfied: jupyterlab-widgets~=3.0.12 in /usr/local/lib/python3.10/site-packages (from ipywidgets) (3.0.13)\nRequirement already satisfied: notebook in /usr/local/lib/python3.10/site-packages (from jupyter) (6.5.7)\nRequirement already satisfied: jupyter-console in /usr/local/lib/python3.10/site-packages (from jupyter) (6.6.3)\nRequirement already satisfied: nbconvert in /usr/local/lib/python3.10/site-packages (from jupyter) (7.16.4)\nRequirement already satisfied: ipykernel in /usr/local/lib/python3.10/site-packages (from jupyter) (6.29.5)\nRequirement already satisfied: jupyterlab in /usr/local/lib/python3.10/site-packages (from jupyter) (3.6.8)\nRequirement already satisfied: decorator in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (5.1.1)\nRequirement already satisfied: jedi>=0.16 in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (0.19.1)\nRequirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (0.1.7)\nRequirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (3.0.48)\nRequirement already satisfied: pygments>=2.4.0 in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (2.18.0)\nRequirement already satisfied: stack-data in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (0.6.3)\nRequirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (1.2.2)\nRequirement already satisfied: typing-extensions>=4.6 in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (4.12.2)\nRequirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/site-packages (from ipython>=6.1.0->ipywidgets) (4.9.0)\nRequirement already satisfied: debugpy>=1.6.5 in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (1.8.6)\nRequirement already satisfied: jupyter-client>=6.1.12 in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (7.4.9)\nRequirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (5.7.2)\nRequirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (1.6.0)\nRequirement already satisfied: packaging in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (24.1)\nRequirement already satisfied: psutil in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (6.0.0)\nRequirement already satisfied: pyzmq>=24 in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (26.2.0)\nRequirement already satisfied: tornado>=6.1 in /usr/local/lib/python3.10/site-packages (from ipykernel->jupyter) (6.4.1)\nRequirement already satisfied: jupyterlab-server~=2.19 in /usr/local/lib/python3.10/site-packages (from jupyterlab->jupyter) (2.27.3)\nRequirement already satisfied: jupyter-server<3,>=1.16.0 in /usr/local/lib/python3.10/site-packages (from jupyterlab->jupyter) (2.14.2)\nRequirement already satisfied: jupyter-ydoc~=0.2.4 in /usr/local/lib/python3.10/site-packages (from jupyterlab->jupyter) (0.2.5)\nRequirement already satisfied: jupyter-server-ydoc~=0.8.0 in /usr/local/lib/python3.10/site-packages (from jupyterlab->jupyter) (0.8.0)\nRequirement already satisfied: nbclassic in /usr/local/lib/python3.10/site-packages (from jupyterlab->jupyter) (1.1.0)\nRequirement already satisfied: jinja2>=2.1 in /usr/local/lib/python3.10/site-packages (from jupyterlab->jupyter) (3.1.4)\nRequirement already satisfied: tomli in /usr/local/lib/python3.10/site-packages (from jupyterlab->jupyter) (2.0.1)\nRequirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/site-packages (from notebook->jupyter) (23.1.0)\nRequirement already satisfied: ipython-genutils in /usr/local/lib/python3.10/site-packages (from notebook->jupyter) (0.2.0)\nRequirement already satisfied: nbformat in /usr/local/lib/python3.10/site-packages (from notebook->jupyter) (5.10.4)\nRequirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/site-packages (from notebook->jupyter) (1.8.3)\nRequirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/site-packages (from notebook->jupyter) (0.18.1)\nRequirement already satisfied: prometheus-client in /usr/local/lib/python3.10/site-packages (from notebook->jupyter) (0.21.0)\nRequirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (4.12.3)\nRequirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (6.1.0)\nRequirement already satisfied: defusedxml in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (0.7.1)\nRequirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (0.3.0)\nRequirement already satisfied: markupsafe>=2.0 in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (2.1.5)\nRequirement already satisfied: mistune<4,>=2.0.3 in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (3.0.2)\nRequirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (0.10.0)\nRequirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (1.5.1)\nRequirement already satisfied: tinycss2 in /usr/local/lib/python3.10/site-packages (from nbconvert->jupyter) (1.3.0)\nRequirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.10/site-packages (from bleach!=5.0.0->nbconvert->jupyter) (1.16.0)\nRequirement already satisfied: webencodings in /usr/local/lib/python3.10/site-packages (from bleach!=5.0.0->nbconvert->jupyter) (0.5.1)\nRequirement already satisfied: parso<0.9.0,>=0.8.3 in /usr/local/lib/python3.10/site-packages (from jedi>=0.16->ipython>=6.1.0->ipywidgets) (0.8.4)\nRequirement already satisfied: entrypoints in /usr/local/lib/python3.10/site-packages (from jupyter-client>=6.1.12->ipykernel->jupyter) (0.4)\nRequirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/site-packages (from jupyter-client>=6.1.12->ipykernel->jupyter) (2.9.0.post0)\nRequirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter) (4.3.6)\nRequirement already satisfied: anyio>=3.1.0 in /usr/local/lib/python3.10/site-packages (from jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (4.6.0)\nRequirement already satisfied: jupyter-events>=0.9.0 in /usr/local/lib/python3.10/site-packages (from jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (0.10.0)\nRequirement already satisfied: jupyter-server-terminals>=0.4.4 in /usr/local/lib/python3.10/site-packages (from jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (0.5.3)\nRequirement already satisfied: overrides>=5.0 in /usr/local/lib/python3.10/site-packages (from jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (7.7.0)\nRequirement already satisfied: websocket-client>=1.7 in /usr/local/lib/python3.10/site-packages (from jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (1.8.0)\nRequirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/site-packages (from argon2-cffi->notebook->jupyter) (21.2.0)\nRequirement already satisfied: jupyter-server-fileid<1,>=0.6.0 in /usr/local/lib/python3.10/site-packages (from jupyter-server-ydoc~=0.8.0->jupyterlab->jupyter) (0.9.3)\nRequirement already satisfied: ypy-websocket<0.9.0,>=0.8.2 in /usr/local/lib/python3.10/site-packages (from jupyter-server-ydoc~=0.8.0->jupyterlab->jupyter) (0.8.4)\nRequirement already satisfied: y-py<0.7.0,>=0.6.0 in /usr/local/lib/python3.10/site-packages (from jupyter-ydoc~=0.2.4->jupyterlab->jupyter) (0.6.2)\nRequirement already satisfied: babel>=2.10 in /usr/local/lib/python3.10/site-packages (from jupyterlab-server~=2.19->jupyterlab->jupyter) (2.16.0)\nRequirement already satisfied: json5>=0.9.0 in /usr/local/lib/python3.10/site-packages (from jupyterlab-server~=2.19->jupyterlab->jupyter) (0.9.25)\nRequirement already satisfied: jsonschema>=4.18.0 in /usr/local/lib/python3.10/site-packages (from jupyterlab-server~=2.19->jupyterlab->jupyter) (4.23.0)\nRequirement already satisfied: requests>=2.31 in /usr/local/lib/python3.10/site-packages (from jupyterlab-server~=2.19->jupyterlab->jupyter) (2.32.3)\nRequirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.10/site-packages (from nbclassic->jupyterlab->jupyter) (0.2.4)\nRequirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.10/site-packages (from nbformat->notebook->jupyter) (2.20.0)\nRequirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/site-packages (from pexpect>4.3->ipython>=6.1.0->ipywidgets) (0.7.0)\nRequirement already satisfied: wcwidth in /usr/local/lib/python3.10/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=6.1.0->ipywidgets) (0.2.13)\nRequirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/site-packages (from beautifulsoup4->nbconvert->jupyter) (2.6)\nRequirement already satisfied: executing>=1.2.0 in /usr/local/lib/python3.10/site-packages (from stack-data->ipython>=6.1.0->ipywidgets) (2.1.0)\nRequirement already satisfied: asttokens>=2.1.0 in /usr/local/lib/python3.10/site-packages (from stack-data->ipython>=6.1.0->ipywidgets) (2.4.1)\nRequirement already satisfied: pure-eval in /usr/local/lib/python3.10/site-packages (from stack-data->ipython>=6.1.0->ipywidgets) (0.2.3)\nRequirement already satisfied: idna>=2.8 in /usr/local/lib/python3.10/site-packages (from anyio>=3.1.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (3.10)\nRequirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/site-packages (from anyio>=3.1.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (1.3.1)\nRequirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/site-packages (from jsonschema>=4.18.0->jupyterlab-server~=2.19->jupyterlab->jupyter) (24.2.0)\nRequirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/site-packages (from jsonschema>=4.18.0->jupyterlab-server~=2.19->jupyterlab->jupyter) (2023.12.1)\nRequirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/site-packages (from jsonschema>=4.18.0->jupyterlab-server~=2.19->jupyterlab->jupyter) (0.35.1)\nRequirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/site-packages (from jsonschema>=4.18.0->jupyterlab-server~=2.19->jupyterlab->jupyter) (0.20.0)\nRequirement already satisfied: python-json-logger>=2.0.4 in /usr/local/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (2.0.7)\nRequirement already satisfied: pyyaml>=5.3 in /usr/local/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (6.0.2)\nRequirement already satisfied: rfc3339-validator in /usr/local/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (0.1.4)\nRequirement already satisfied: rfc3986-validator>=0.1.1 in /usr/local/lib/python3.10/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (0.1.1)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/site-packages (from requests>=2.31->jupyterlab-server~=2.19->jupyterlab->jupyter) (3.3.2)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/site-packages (from requests>=2.31->jupyterlab-server~=2.19->jupyterlab->jupyter) (2.2.3)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/site-packages (from requests>=2.31->jupyterlab-server~=2.19->jupyterlab->jupyter) (2024.8.30)\nRequirement already satisfied: aiofiles<23,>=22.1.0 in /usr/local/lib/python3.10/site-packages (from ypy-websocket<0.9.0,>=0.8.2->jupyter-server-ydoc~=0.8.0->jupyterlab->jupyter) (22.1.0)\nRequirement already satisfied: aiosqlite<1,>=0.17.0 in /usr/local/lib/python3.10/site-packages (from ypy-websocket<0.9.0,>=0.8.2->jupyter-server-ydoc~=0.8.0->jupyterlab->jupyter) (0.20.0)\nRequirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.10/site-packages (from argon2-cffi-bindings->argon2-cffi->notebook->jupyter) (1.17.1)\nRequirement already satisfied: pycparser in /usr/local/lib/python3.10/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook->jupyter) (2.22)\nRequirement already satisfied: fqdn in /usr/local/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (1.5.1)\nRequirement already satisfied: isoduration in /usr/local/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (20.11.0)\nRequirement already satisfied: jsonpointer>1.13 in /usr/local/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (3.0.0)\nRequirement already satisfied: uri-template in /usr/local/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (1.3.0)\nRequirement already satisfied: webcolors>=24.6.0 in /usr/local/lib/python3.10/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (24.8.0)\nRequirement already satisfied: arrow>=0.15.0 in /usr/local/lib/python3.10/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (1.3.0)\nRequirement already satisfied: types-python-dateutil>=2.8.10 in /usr/local/lib/python3.10/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=1.16.0->jupyterlab->jupyter) (2.9.0.20240906)\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.\u001b[0m\u001b[33m\n\u001b[0m","output_type":"stream"}]},{"cell_type":"code","source":"import tensorflow as tf\n\ntry:\n    tpu = tf.distribute.cluster_resolver.TPUClusterResolver() \n    print('Running on TPU ', tpu.master())\nexcept ValueError:\n    tpu = None\n\nif tpu:\n    tf.config.experimental_connect_to_cluster(tpu)\n    tf.tpu.experimental.initialize_tpu_system(tpu)\n    strategy = tf.distribute.TPUStrategy(tpu)\nelse:\n    strategy = tf.distribute.get_strategy() \n\nprint(\"REPLICAS: \", strategy.num_replicas_in_sync)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# from google.colab import drive\n# drive.mount('/content/drive')","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qFctU49L3YWs","outputId":"38be3b31-91d8-4a86-c8c8-4c088ae2afa7","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# import os\n\n# # Create the directory explicitly with the absolute path\n# os.makedirs(\"~/.kaggle\", exist_ok=True)\n\n# !cp \"/kaggle/input/kaggle-token/kaggle (1).json\" ~/kaggle.json\n# # Copy the kaggle.json file from your Google Drive to the required location\n# !cp ~/kaggle.json ~/.kaggle/\n\n# # Set the correct permissions for the Kaggle API token\n# !chmod 600 ~/.kaggle/kaggle.json\n","metadata":{"id":"AGwgatwy4zqh","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tpu.master()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# !pip install kaggle\n# !kaggle competitions download -c playground-series-s4e10","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lnWQ8Xfp5RWI","outputId":"51ac6c76-76f4-4d42-a310-f2987df37d13","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# from zipfile import ZipFile\n\n# with ZipFile('/content/playground-series-s4e10.zip', 'r') as zip_ref:\n#     zip_ref.extractall('/content')","metadata":{"id":"SStBLetO6Lzv","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\n\nprint(f'reading the csv files into pandas dataframes.')\ntrain_df = pd.read_csv('/kaggle/input/playground-series-s4e10/train.csv')\ntest_df = pd.read_csv('/kaggle/input/playground-series-s4e10/test.csv')\nsub_df = pd.read_csv('/kaggle/input/playground-series-s4e10/sample_submission.csv')\n","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4-aOwIrp2pYI","outputId":"e6ef0214-f215-4ace-94ca-27dcaf0ca8f8","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# train_df.info()","metadata":{"id":"msVqxn5m2pYI","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# test_df.info()","metadata":{"id":"8CVAOYiU2pYJ","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# train_df.isnull().any(), test_df.isnull().any()","metadata":{"id":"dhU-Nqzs2pYJ","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cat_cols = train_df.select_dtypes('object').columns\nnum_cols = []\nfor col in train_df.select_dtypes(exclude='object').columns:\n    if col not in ('id', 'loan_status'):\n        num_cols.append(col)\n# num_cols, cat_cols","metadata":{"id":"A4GXB1u62pYJ","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# train_df['loan_status'].value_counts(normalize=True)","metadata":{"id":"8MTuOiD92pYJ","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\ndef box_plots_num_cols(df, columns):\n    df = df.copy()\n    base_width = 10\n    base_height = 5\n    rows = len(columns)\n    cols = 1\n    fig_width = cols * base_width\n    fig_height = rows * base_height\n    fig, axes = plt.subplots(rows, cols, figsize=(fig_width, fig_height))\n    axes = axes.flatten() if rows > 1 else [axes]\n    for i, col in enumerate(columns):\n        axes[i].boxplot(df[col])\n        axes[i].set_title(col)\n    for j in range(i+1, len(axes)):\n        axes[j].axis('off')\n    plt.tight_layout()","metadata":{"id":"59Vicvtb2pYJ","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# box_plots_num_cols(train_df, num_cols)","metadata":{"id":"5q3wrA282pYK","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from scipy import stats\nimport numpy as np\n\ndef remove_outliers(df:pd.DataFrame(), cols, beta):\n    df = df.copy()\n    for col in cols:\n#         print(f'removing {col} outliers:\\n')\n        data = df[col]\n        iqr = stats.iqr(data)\n        q1 = np.percentile(data, 25)\n        q3 = np.percentile(data, 75)\n        outlier_low = q1 - beta * iqr\n        outlier_high = q1 + beta * iqr\n#         print(f'outlier_low:{outlier_low}, outlier_high: {outlier_high}')\n        df = df[(data >= outlier_low) & (data <= outlier_high)]\n    return df\n","metadata":{"id":"ZtOn9zxs2pYK","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(f'removing outliers before oversampling')\ndf_clean = remove_outliers(train_df, num_cols, 1.5)\n# box_plots_num_cols(df_clean, num_cols)\ndf_clean.shape, train_df.shape","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CbzNHkWx2pYK","outputId":"d4f41e9f-20c6-45a8-d9a6-3b153ddb7ad9","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def hist_plot_cat_cols(df:pd.DataFrame(), cat_cols=cat_cols):\n    df = df.copy()\n    fig, axes_cat = plt.subplots(1, len(cat_cols), figsize=(20, 10))\n    for i, col in enumerate(cat_cols):\n        axes_cat[i].hist(df[col])\n        axes_cat[i].set_title(col)","metadata":{"id":"fkP1sW402pYK","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# hist_plot_cat_cols(train_df)","metadata":{"id":"XWZIcwpD2pYK","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# hist_plot_cat_cols(df_clean)","metadata":{"id":"6Daiqx6X2pYL","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\n\nprint('encoding the categorical features')\ndf_clean = df_clean.drop(columns=['id'])\n\nord_enc = OrdinalEncoder()\none_hot_enc = OneHotEncoder(sparse_output=False)\n\nordinal_cols = ['loan_grade']\none_hot_cols = [col for col in cat_cols if col != 'loan_grade']\nremaining_cols = [col for col in df_clean.columns if col not in cat_cols]\n\nencoder = ColumnTransformer(\n            transformers=[\n                ('ordinal_encoder', ord_enc, ordinal_cols),\n                ('one_hot_encoder', one_hot_enc, one_hot_cols),\n                ('passthrough', 'passthrough', remaining_cols )\n            ]\n)\n\nencoded_data = encoder.fit_transform(df_clean)\none_hot_enc.fit(df_clean[one_hot_cols])\none_hot_encoded_cols = one_hot_enc.get_feature_names_out(one_hot_cols)\nall_cols = ordinal_cols + list(one_hot_encoded_cols) + remaining_cols\ndf_encoded = pd.DataFrame(encoded_data, columns=all_cols)\ndf_encoded.info()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iz0XxUy12pYL","outputId":"a04b5901-3a48-4ba2-d72e-b9cef5e045fe","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install imblearn\nfrom imblearn.over_sampling import SMOTE, SVMSMOTE\n\nprint(f'oversampling using SVMSMOTE')\ndf_enc_copy = df_encoded.copy()\n\nsmote = SMOTE(random_state=32,  k_neighbors=10)\nsvm_smote = SVMSMOTE(random_state=32, k_neighbors=10,m_neighbors=10)\n\nX = df_enc_copy.drop(columns=['loan_status'])\ny = df_enc_copy.loc[:, 'loan_status']\n\nX_smote, y_smote = smote.fit_resample(X, y)\nX_svm_smote, y_svm_smote = svm_smote.fit_resample(X, y)\nX_smote.shape, y_smote.shape, X_svm_smote.shape, y_svm_smote.shape","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6bnWn1Nk2pYL","outputId":"19936ed2-b00d-4dd5-8be8-12669aa48076","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"smote_df = X_smote\nsmote_df['loan_status'] = y_smote\n\nsvm_smote_df = X_svm_smote\nsvm_smote_df['loan_status'] = y_svm_smote\n","metadata":{"id":"x65j6BfZ2pYL","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# c = [col for col in smote_df.columns if col not in one_hot_encoded_cols]\n# box_plots_num_cols(smote_df, c)","metadata":{"id":"sU1TZD2M2pYL","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# c2 = [col for col in svm_smote_df.columns if col not in one_hot_encoded_cols]\n# box_plots_num_cols(svm_smote_df, c2)","metadata":{"id":"gQQuhfqk2pYL","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# smote_corr = smote_df.corr()\n# svm_smote_corr = svm_smote_df.corr()","metadata":{"id":"sQ-xZAX22pYL","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sns\n\ndef heatmap_corr(corr):\n    plt.figure(figsize=(10, 8))\n    sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=0.5)\n    plt.title('Correlation Heatmap')\n    plt.show()","metadata":{"id":"0ZCuXkmt2pYL","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# heatmap_corr(smote_corr)","metadata":{"id":"8ZJUeWU-2pYL","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# heatmap_corr(svm_smote_corr)","metadata":{"id":"X8R0Xdsk2pYM","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# high_smote_corr = smote_corr[(abs(smote_corr) > 0.7) & (abs(smote_corr) != 1.0)]\n# heatmap_corr(high_smote_corr)","metadata":{"id":"rrdxxXsu2pYM","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# high_svm_smote_corr = svm_smote_corr[(abs(svm_smote_corr) > 0.7) & (abs(svm_smote_corr) != 1.0)]\n# heatmap_corr(high_svm_smote_corr)","metadata":{"id":"U0kFKuHp2pYM","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print('dropping the column person home ownership rent')\ndf_final = svm_smote_df.drop(columns=[ 'person_home_ownership_RENT'])\ndf_final.info()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QE4NvjnB2pYM","outputId":"4f2a850d-c619-4c0c-fa78-7b8fe3b518ef","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import StratifiedShuffleSplit\n\nprint('splitting the dataset into train and test')\n\nsss = StratifiedShuffleSplit(n_splits=1, random_state=32, test_size=0.1)\nfor tr, te in sss.split(X, y):\n    df_train = df_final.iloc[tr]\n    df_test  = df_final.iloc[te]\ntarget_col = 'loan_status'\nfeatures_cols = [col for col in df_train.columns if col != target_col]\ndf_train.shape, df_test.shape","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iese6I-52pYM","outputId":"166a9cbb-94cf-4208-b4dc-cf8ca94f6e2b","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\nfrom sklearn.pipeline import Pipeline\n\ndef prepare_data_for_tpu(df:pd.DataFrame, features_cols:list[str], target_col:str, batch_size:int=32, poly_degree:int=2, poly:bool=False, valid_split:bool=False,valid_split_size:float=0.2):\n\n    df = df.copy()\n    features = df[features_cols]\n    target = df.loc[:, target_col]\n\n    pipe = Pipeline([\n        ('scaler', StandardScaler()),\n        ('poly', PolynomialFeatures(degree=poly_degree, include_bias=False, interaction_only=True)) if poly else None\n    ])\n    pipe.steps = [step for step in pipe.steps if step is not None]\n\n    features_final = pipe.fit_transform(features)\n    features_final_df = pd.DataFrame(features_final, columns=[f'feature_{i}' for i in range(features_final.shape[1])])\n\n\n    features_tensor = tf.convert_to_tensor(features_final_df.values.astype('float32'), dtype=tf.float32)\n    target_tensor = tf.convert_to_tensor(target.values.astype('int64'), dtype=tf.int64)\n\n    dataset = tf.data.Dataset.from_tensor_slices((features_tensor, target_tensor))\n\n    dataset_size = len(features)\n    val_size = int(valid_split_size * dataset_size)\n    if valid_split and (valid_split_size > 0.0):\n        valid_dataset = dataset.take(val_size).batch(batch_size).prefetch(tf.data.experimental.AUTOTUNE)\n        train_dataset = dataset.skip(val_size).shuffle(buffer_size=dataset_size-val_size).batch(batch_size).prefetch(tf.data.experimental.AUTOTUNE)\n\n        result = (train_dataset, valid_dataset)\n    else:\n        dataset = dataset.shuffle(buffer_size=dataset_size).batch(batch_size).prefetch(tf.data.experimental.AUTOTUNE)\n\n        result = (dataset, )\n    return result\n\ntrain_dataset, valid_dataset = prepare_data_for_tpu(df_train, features_cols=features_cols, target_col=target_col, poly=True, poly_degree=3, valid_split=True, valid_split_size=0.2)","metadata":{"id":"i9y4ryJC2pYM","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nimport keras\nfrom keras import activations, layers, initializers, regularizers, optimizers, losses, metrics\n\nclass ann_layer_gen:\n    def __init__(self, input_shape, batch_norm:bool=False, drop_out:bool=False, regularize:bool=False,  initializers :bool=False,drop_out_rate:float=0.0) -> None:\n        self.input_shape = input_shape\n        self.batch_norm = batch_norm\n        self.drop_out = drop_out\n        self.regularize = regularize\n        self.initializers = initializers\n        self.drop_out_rate = drop_out_rate\n        self.model = keras.Sequential()\n        self.model.add(keras.Input(shape=(input_shape, )))\n\n    def __call__(self,  out_act_fun:activations, out_unit:int, units:int=100, n_hidden_layers:int=5,  hidden_act_fun:activations=activations.relu) -> keras.Sequential :\n        for n_layer in range(1, n_hidden_layers+1):\n            layer_params = {'units':units, 'activation':hidden_act_fun}\n\n            if self.regularize:\n                layer_params['kernel_regularizer'] = regularizers.L1()\n            if self.initializers:\n                layer_params['kernel_initializer'] = initializers.glorot_normal\n\n            self.model.add(layers.Dense(**layer_params))\n\n            if self.drop_out:\n                self.model.add(layers.Dropout(rate=self.drop_out_rate))\n\n            if self.batch_norm:\n                self.model.add(layers.BatchNormalization())\n\n            units = round(units / 2)\n        self.model.add(layers.Dense(out_unit, activation=out_act_fun))\n        return self.model\n\n    def compile(model, loss:losses.Loss, metrics:list=['accuracy'], optimizer:optimizers.Optimizer=optimizers.Adam, valid_split:float=0.2, learning_rate:float=0.01 ) -> keras.Sequential:\n        try:\n            model.compile(optimizer=optimizer(learning_rate=learning_rate), loss=loss, metrics=metrics)\n        except Exception as e:\n            print('Could not compile the model with given params.')\n        return model","metadata":{"id":"hTc4q5oS2pYM","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install optuna\nimport optuna\nfrom keras import optimizers, activations, losses\nimport tensorflow as tf\nfrom keras import backend as K\n\ninput_shape = train_dataset.element_spec[0].shape[1]  # Assuming the first element in the dataset is the feature tensor\n\n# Objective function for Optuna\ndef objective(trial: optuna.Trial):\n    epochs = trial.suggest_int('epochs', 10, 100, step=10)\n    units = trial.suggest_int('units', 100, 500, step=50)\n    n_hidden_layers = trial.suggest_int('n_hidden_layers', 3, 19, step=2)\n    batch_norm = trial.suggest_categorical('batch_norm', [True, False])\n    drop_out = trial.suggest_categorical('drop_out', [True, False])\n    regularize = trial.suggest_categorical('regularize', [True, False])\n    initializers = trial.suggest_categorical('initializers', [True, False])\n    drop_out_rate = trial.suggest_float('drop_out_rate', 0, 1)\n    learning_rate = trial.suggest_float('learning_rate', 1e-6, 1e-1, log=True)\n    optimizer_name = trial.suggest_categorical('optimizer', ['Adam', 'RMSprop', 'SGD', 'Nadam'])\n\n    # Create optimizer object based on the selected name\n    if optimizer_name == 'Adam':\n        optimizer = optimizers.Adam(learning_rate=learning_rate)\n    elif optimizer_name == 'RMSprop':\n        optimizer = optimizers.RMSprop(learning_rate=learning_rate)\n    elif optimizer_name == 'SGD':\n        optimizer = optimizers.SGD(learning_rate=learning_rate)\n    elif optimizer_name == 'Nadam':\n        optimizer = optimizers.Nadam(learning_rate=learning_rate)\n\n    # Initialization parameters\n    init_params = {\n        'batch_norm': batch_norm,\n        'drop_out': drop_out,\n        'drop_out_rate': drop_out_rate,\n        'regularize': regularize,\n        'initializers': initializers\n    }\n\n    # Model creation within TPU scope\n    with strategy.scope():\n        print('inside scope')\n        ann_layer_generator = ann_layer_gen(input_shape=input_shape, **init_params)\n        ann_model = ann_layer_generator(out_act_fun=activations.sigmoid, out_unit=1, units=units, n_hidden_layers=n_hidden_layers)\n        ann_model.compile(optimizer=optimizer, loss=losses.binary_crossentropy, metrics=['accuracy'])\n\n        batch_size = 8 * strategy.num_replicas_in_sync\n\n        # Model training\n        history = ann_model.fit(train_dataset, validation_data=valid_dataset, batch_size=batch_size, epochs=epochs, shuffle=True, verbose=1)\n    print('outside scope')\n    val_accuracy = history.history['val_accuracy'][-1]\n    train_accuracy = history.history['accuracy'][-1]\n    val_loss = history.history['val_loss'][-1]\n    train_loss = history.history['loss'][-1]\n    return (train_loss, train_accuracy)\n","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GcvJ_1h72pYN","outputId":"5c8b208c-fd5c-4d8d-905e-4c9eb3f1ff51","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!rm -rf loan_approval_ann_study.db\nloan_approval_ann_study = optuna.create_study(\n    storage='sqlite:///loan_approval_ann_study.db',\n    study_name='loan_approval_ann_study',\n    directions=['minimize', 'maximize'],\n    load_if_exists=True\n)\n\nloan_approval_ann_study.optimize(objective,  n_trials=2, show_progress_bar=True)","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":251,"referenced_widgets":["c720aeb19f0340f2814f90060ca725a0","0251a40a64084074b0dcd481dc987ec1","27eda0234c0c41cca597039d6ba013f0","e485ad01203f4892bfca150001841277","c7d47a9e7dcc470c90258b0e4bdc861b","80bbcfd89fe5479293a041f412f627de","48659b8a38044461a7667c33dcc2533c","a9ff7cbc02fb4ccbb974a31262ae5ecc","54d688765c00479e98216630d7855cf2","d7d39aa9302a432b981e35f8a686eb2e","a783d51d1bbd489f8abbb4de55f15835"]},"id":"EUJ9C6aY2pYN","outputId":"beb5aee4-7818-45bc-80e4-cbebafadc0e7","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"hk3lmSrjLjmY","outputId":"c5a63213-9870-4d76-bf65-bbc1e1fc1541"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import OrdinalEncoder, OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\n\n\nprint('encoding the final test data set')\nord_enc_test = OrdinalEncoder()\none_hot_enc_test = OneHotEncoder(sparse_output=False)\n\ntest_cat_cols = test_df.select_dtypes('object').columns\nordinal_cols = ['loan_grade']\none_hot_cols = [col for col in test_cat_cols if col != 'loan_grade']\nremaining_cols = [col for col in test_df.columns if col not in list(test_cat_cols)]\n\nencoder_test = ColumnTransformer(\n            transformers=[\n                ('ordinal_encoder', ord_enc_test, ordinal_cols),\n                ('one_hot_encoder', one_hot_enc_test, one_hot_cols),\n                ('passthrough', 'passthrough', remaining_cols )\n            ]\n)\n\nencoded_data = encoder_test.fit_transform(test_df)\none_hot_enc_test.fit(test_df[one_hot_cols])\none_hot_encoded_cols = one_hot_enc_test.get_feature_names_out(one_hot_cols)\nall_cols = ordinal_cols + list(one_hot_encoded_cols) + remaining_cols\ntest_df_encoded = pd.DataFrame(encoded_data, columns=all_cols)\ntest_df_encoded.info()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iBXn-Au62pYN","outputId":"cc1f0839-eeb5-466d-c2f7-2c60c8319fca","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\nfrom sklearn.pipeline import Pipeline\n\ndef prepare_test_data_for_tpu(df: pd.DataFrame, features_cols: list[str], target_col: str, batch_size: int = 32, poly_degree: int = 2, poly: bool = False):\n\n    df = df.copy()\n    features = df[features_cols]\n    target = df[target_col]\n\n    # Define pipeline for scaling and optional polynomial features\n    pipe = Pipeline([\n        ('scaler', StandardScaler()),\n        ('poly', PolynomialFeatures(degree=poly_degree, include_bias=False, interaction_only=True)) if poly else None\n    ])\n    pipe.steps = [step for step in pipe.steps if step is not None]\n\n    # Transform features\n    features_final = pipe.fit_transform(features)\n    features_final_df = pd.DataFrame(features_final, columns=[f'feature_{i}' for i in range(features_final.shape[1])])\n\n    # Create tf.data.Dataset without shuffling, batching only\n    dataset = tf.data.Dataset.from_tensor_slices((dict(features_final_df), target))\n    dataset = dataset.batch(batch_size).prefetch(tf.data.experimental.AUTOTUNE)\n\n    return dataset\n","metadata":{"id":"FklppLUM2pYO","trusted":true},"execution_count":null,"outputs":[]}]}